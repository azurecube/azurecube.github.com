<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | for loop]]></title>
  <link href="http://azurecube.github.io/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://azurecube.github.io/"/>
  <updated>2014-08-03T22:36:41+09:00</updated>
  <id>http://azurecube.github.io/</id>
  <author>
    <name><![CDATA[arte_nut (twitter)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[バッファローカルにEvilを有効にする/momonga.vim #6]]></title>
    <link href="http://azurecube.github.io/blog/2014/08/03/momonga-6/"/>
    <updated>2014-08-03T14:29:38+09:00</updated>
    <id>http://azurecube.github.io/blog/2014/08/03/momonga-6</id>
    <content type="html"><![CDATA[<h2>目標</h2>

<p>Emacs Evil (Extensible VI Layer) をバッファローカルに有効にする</p>

<h2>動機</h2>

<p><a href="http://www.amazon.co.jp/%E5%AE%9F%E8%B7%B5Vim-%E6%80%9D%E8%80%83%E3%81%AE%E3%82%B9%E3%83%94%E3%83%BC%E3%83%89%E3%81%A7%E7%B7%A8%E9%9B%86%E3%81%97%E3%82%88%E3%81%86-Drew-Neil/dp/4048916599">Amazon.co.jp： 実践Vim 思考のスピードで編集しよう!: Drew Neil, 新丈径: 本</a>を読んでvimのキーバインドや文字列操作に対する考えかたの有効性も理解して、vimを使いつつ、過去のmomonga.vimにも参加して.vimrcを弄ったりしたものの、エディタというか作業のベースがEmacsになってしまっていて、これはVimに置き換えもできないと感じていた</p>

<p>一方で以前から <a href="http://d.hatena.ne.jp/tarao/20130303/evil_intro">Evil: EmacsをVimのごとく使う &ndash; 導入編 &ndash; 貳佰伍拾陸夜日記</a> を読んで使ってみたいと気にはしていたのだけど<code>(evil-mode t)</code>を実行するとEmacs上の全てのバッファで有効になってしまうので導入に踏み切れないでいた。種々のアプリはEmacs上での動作を基本としているのでVimキーバインドはプログラミングするバッファのみで有効になって欲しい</p>

<p>で、momonga.vim#6がドワンゴでやる、ということだったので会場に対する興味もありつつこれを期にやってしまおうと企ててみた</p>

<h2>結果</h2>

<p>evil-local-modeという関数が用意されてて、完全に確認不足</p>

<h2>経過</h2>

<p>ちょっと頑張ってみないと、と思っていたevilをローカルバッファのみで有効にする、という処理が公式に用意されていて何をしに来たのか良くわからない状態に。
とりあえずこんな感じで該当のファイルをオープンしたタイミングで設定を有効にできるはず。</p>

<p>```
(require &lsquo;evil)
(evil-mode 0)</p>

<p>(defmacro add-evil-mode (hook-name)
  `(add-hook &lsquo;,hook-name &rsquo;(lambda () (evil-local-mode t))))</p>

<p>(add-evil-mode sh-mode-hook)
(add-evil-mode clojure-mode-hook)
(add-evil-mode ruby-mode-hook)
(add-evil-mode lisp-interaction-mode-hook)
(add-evil-mode emacs-lisp-mode-hook)
```</p>

<p>ついでにevil-local-modeを有効にしたり、C-gでEvilでの処理をキャンセルしてnormal-stateに戻るようなキーバインド設定。
```
  (defun toggle-evil-local-mode () (interactive)</p>

<pre><code>(if evil-local-mode
  (evil-local-mode 0)
  (evil-local-mode 1)))
</code></pre>

<p>  (defun evil-escape-or-quit (&amp;optional prompt)</p>

<pre><code>(interactive)
(cond
  ((or (evil-normal-state-p) (evil-insert-state-p) (evil-visual-state-p)
       (evil-replace-state-p) (evil-visual-state-p)) [escape])
(t (kbd "C-g"))))
</code></pre>

<p>  (define-key key-translation-map     (kbd &ldquo;C-g&rdquo;)     &lsquo;evil-escape-or-quit)
  (define-key evil-operator-state-map (kbd &ldquo;C-g&rdquo;)     'evil-escape-or-quit)
  (define-key evil-normal-state-map   [escape]        'keyboard-quit)
  (global-set-key                     (kbd &ldquo;C-c C-z&rdquo;) 'toggle-evil-local-mode)
```</p>

<p>とりあえず、この辺を設定しておいて少しずつEvilを使っていくようにしようと思う。</p>

<h2>課題</h2>

<p>evil-mode-lineがevil-local-modeの場合は効いてなさそうなのをなんとかしたい。。。<br/>
<a href="http://rhysd.hatenablog.com/entry/2013/09/17/220837">clever-f.vim</a>相当の機能が欲しい</p>

<h2>感想とか</h2>

<p>会場について特にドワンゴだから、といったような特殊な感じはなかったんじゃないかと。。<br/>
うたってみたの実演があったけど、(闇のVimの)勉強会では普通のことのようだし。<br/>
前回同様ゆるくもくもくできたけど、前回朝から晩までだったのに比べればだいぶ短期集中だったかな。</p>

<p>余り色々の人とお話はできなかったけれど@pogin503さんにElispのことを教わったりした。Vimはあまり使ってないとのことだったのでVimについて知りたければ入門viより実践Vimを読むべきと押し付けたりした。</p>

<p>あとは、周りのVimmerのコイツ何してるの、という視線もないまま空気と化して一人もくもくとEmacsをいじっていた私を見かねて主催の@supermomongaさんがEvil回りの話を振ってくれたのだけど、期待に応えられず。</p>

<p>もってきてもらった課題はVimユーザとしてはEvilを使ってる状況でC-[でkeyboard-quit相当の処理をしたい場面があるのだけど思った通りに動かないといったもの。
例えば下記の設定はEscapeキーには効くけど、C-[には効かない。</p>

<p><code>
(define-key minibuffer-inactive-mode-map [escape] 'keyboard-quit)
</code></p>

<p>EscapeもC-[もESCとして認識されてるみたいなのだけど、どうもそれぞれ別個に機能としてのESCと紐付いてるみたいで、かつC-[のキーバインドを変更する方法は見付けられなかった。keycodeを検出するxevを動かすために@supermomongaさんのMacにXを捩じ込んだりもしたけど、keycode指定も上手くいかなかくて悔しい思いをした。</p>

<p>ちなみに後で試してみたところ強引に下記のようにC-[をC-gにtranslateしてしまえばkeyboard-quitを実行することは可能だった。</p>

<p><code>
(keyboard-translate ?\e ?\a)
</code></p>

<p>参考 <a href="http://www.geocities.co.jp/SiliconValley-Bay/9285/ELISP-JA/elisp_26.html">GNU Emacs Lispリファレンスマニュアル: Character Type</a></p>

<p>ということで進捗としては何しにわざわざ勉強会に行ったのか、といった感じになってしまったけれどこういう機会がないとなかなかEvilに向き会えなかったので良い切っ掛けだったと思う。<br/>
今回のことでEmacs上でVimに近いキーバインドを使って作業できる状況を作れるようにはなってきたのだけどvimscriptで実装されてるあの機能が欲しい、となったりしそうなのが若干不安。そこまでEvilが手に馴染めばそれはそれで良い兆候なのだろうけど。</p>
]]></content>
  </entry>
  
</feed>
